name: "dreamavatar-sdf"
tag: "${rmspace:${system.prompt_processor.prompt},_}"
exp_root_dir: "outputs"
seed: 0

data_type: "random-camera-datamodule"
data:
  batch_size: 1
  width: 64
  height: 64
  camera_distance_range: [1.5, 2.0]
  fovy_range: [40, 70]
  elevation_range: [-10, 90]
  light_sample_strategy: "dreamfusion"
  eval_camera_distance: 2.0
  eval_fovy_deg: 70.

system_type: "dreamavatar-sdf-system"
system:
  geometry_type: "tetrahedra-sdf-grid"
  geometry:
    radius: 1.0 # consistent with coarse
    isosurface_resolution: 128
    isosurface_deformable_grid: true
    pos_encoding_config: # consistent with coarse, no progressive band
      otype: HashGrid
      n_levels: 16
      n_features_per_level: 2
      log2_hashmap_size: 19
      base_resolution: 16
      per_level_scale: 1.4472692374403782 # max resolution 4096
    fix_geometry: false # optimize grid sdf and deformation
    shape_init: smpl

  material_type: "diffuse-with-point-light-material"
  material:
    ambient_only_steps: 2001
    albedo_activation: sigmoid

  # material_type: "no-material" # unused
  # material:
  #   n_output_dims: 0

  # background_type: "neural-environment-map-background"
  # background:
  #   color_activation: sigmoid

  background_type: "solid-color-background" # unused

  renderer_type: "nvdiff-rasterizer"
  renderer:
    context_type: gl

  prompt_processor_type: "stable-diffusion-prompt-processor"
  prompt_processor:
    pretrained_model_name_or_path: "runwayml/stable-diffusion-v1-5"
    prompt: ???

  guidance_type: "stable-diffusion-guidance"
  guidance:
    pretrained_model_name_or_path: "runwayml/stable-diffusion-v1-5"
    guidance_scale: 10.
    weighting_strategy: sds
    min_step_percent: 0.02
    max_step_percent: 0.98

  loggers:
    wandb:
      enable: false
      project: 'threestudio'

  loss:
    lambda_sds: 1.
    lambda_orient: [0, 10., 1000., 5000]
    lambda_sparsity: 1.
    lambda_opaque: 0.
  optimizer:
    name: Adam
    args:
      lr: 0.01
      betas: [0.9, 0.99]
      eps: 1.e-15
    params:
      geometry:
        lr: 0.01
      background:
        lr: 0.001

trainer:
  max_steps: 10000
  log_every_n_steps: 1
  num_sanity_val_steps: 0
  val_check_interval: 200
  enable_progress_bar: true
  precision: 16-mixed

checkpoint:
  save_last: true # save at each validation time
  save_top_k: -1
  every_n_train_steps: ${trainer.max_steps}
