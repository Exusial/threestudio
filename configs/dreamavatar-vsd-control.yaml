name: "dreamavatar-vsd"
tag: "${rmspace:${system.prompt_processor.prompt},_}"
exp_root_dir: "outputs"
seed: 0

data_type: "zoom-random-camera-datamodule"
data:
  batch_size: 1
  width: [128, 512]
  height: [128, 512]
  resolution_milestones: [5000]
  camera_distance_range: [1.7, 2.0]
  fovy_range: [40, 70]
  elevation_range: [-10, 45]
  camera_perturb: 0.
  center_perturb: 0.
  up_perturb: 0.
  eval_camera_distance: 1.8
  eval_fovy_deg: 70.
  focus_mode: 0
  focus_camera_distance: 0.6

system_type: "dreamavatar-control-system"
system:
  zoomable: 0
  use_vsd: 1
  geometry_type: "implicit-volume"
  geometry:
    radius: 2.0
    normal_type: "refnerf"

    # the density initialization proposed in the DreamFusion paper
    # does not work very well
    # density_bias: "blob_dreamfusion"
    # density_activation: exp
    # density_blob_scale: 5.
    # density_blob_std: 0.2

    # use Magic3D density initialization instead
    density_bias: "smpl"
    density_activation: softplus
    density_blob_scale: 10.
    density_blob_std: 0.5

    smpl_model_dir: /home/penghy/diffusion/avatars/models
    smpl_out_dir: smpl.obj
    smpl_gender: female

    # coarse to fine hash grid encoding
    # to ensure smooth analytic normals
   #pos_encoding_config: # consistent with coarse, no progressive band
   #  otype: HashGrid
   #  n_levels: 16
   #  n_features_per_level: 2
   #  log2_hashmap_size: 19
   #  base_resolution: 16
   #  per_level_scale: 1.4472692374403782 # max resolution 4096

    pos_encoding_config:
     #otype: ProgressiveBandFrequency
     #n_frequencies: 24
      otype: ProgressiveBandHashGrid
      n_levels: 16
      n_features_per_level: 2
      log2_hashmap_size: 19
      base_resolution: 16
      per_level_scale: 1.447269237440378 # max resolution 4096
      start_level: 8 # resolution ~200
      start_step: 2000
      update_steps: 500

  prompt_processor_type: "stable-diffusion-prompt-processor"
  prompt_processor:
    #pretrained_model_name_or_path: "/home/ldy/ldy/dreambooth_test/cjiang_anything_v5"
    pretrained_model_name_or_path: "runwayml/stable-diffusion-v1-5"
    # pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1-base"
    #pretrained_model_name_or_path: "/home/ldy/ldy/dreambooth_test/cjiang_anything_v5"
    prompt: ???
    front_threshold: 30.
    back_threshold: 30.

  # material_type: "diffuse-with-point-light-material"
  # material:
  #   ambient_only_steps: 100001
  #   albedo_activation: sigmoid

  material_type: "no-material"
  material:
    n_output_dims: 3
    color_activation: sigmoid

  background_type: "neural-environment-map-background"
  background:
    color_activation: sigmoid

  # background_type: "solid-color-background" # unused

  renderer_type: "nerf-volume-renderer"
  renderer:
    radius: ${system.geometry.radius}
    num_samples_per_ray: 512

  guidance_type: "vsd-controlnet-guidance"
  guidance:
    pretrained_model_name_or_path: "runwayml/stable-diffusion-v1-5"
    pretrained_model_name_or_path_lora: "runwayml/stable-diffusion-v1-5"
    #pretrained_model_name_or_path: "/home/ldy/ldy/dreambooth_test/cjiang_anything_v5"
    control_type: "openpose"
    min_step_percent: 0.02
    max_step_percent: 0.98
    guidance_scale: 7.5
    condition_scale: 0.2

  # guidance_type: "stable-diffusion-guidance"
  # guidance:
  #   pretrained_model_name_or_path: "runwayml/stable-diffusion-v1-5"
  #   # pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1-base"
  #   # pretrained_model_name_or_path: "/home/ldy/ldy/dreambooth_test/cjiang_anything_v5"
  #   guidance_scale: 100.
  #   weighting_strategy: sds
  #   min_step_percent: 0.02
  #   max_step_percent: 0.98

  # guidance_type: "stable-diffusion-vsd-guidance"
  # guidance:
  #   pretrained_model_name_or_path: "runwayml/stable-diffusion-v1-5"
  #   pretrained_model_name_or_path_lora: "runwayml/stable-diffusion-v1-5"
  #   guidance_scale: 7.5
  #   min_step_percent: 0.02
  #   max_step_percent: 0.98

  loggers:
    wandb:
      enable: false
      project: 'threestudio'

  loss:
    lambda_vsd: 1
    lambda_sds: 1
    lambda_lora: 1.
    lambda_normal: 1
    lambda_orient: 0.
    lambda_sparsity: 10.
    lambda_opaque: [10000, 0.0, 1000.0, 10001]
    lambda_z_variance: 0

  optimizer:
    name: AdamW
    args:
      betas: [0.9, 0.99]
      eps: 1.e-15
    params:
      geometry:
        lr: 0.01
      background:
        lr: 0.001

trainer:
  max_steps: 30000
  log_every_n_steps: 1
  num_sanity_val_steps: 0
  val_check_interval: 100
  enable_progress_bar: true
  precision: 16-mixed

checkpoint:
  save_last: true # save at each validation time
  save_top_k: -1
  every_n_train_steps: ${trainer.max_steps}
